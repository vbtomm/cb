//39
// BEGIN
public class App {
    public static void gogo() {
        System.out.println("It works!");
    }
    public static void main(String[] args) {
        App.gogo();
    }
}
// END

//40
public class App {
    // BEGIN (write your solution here)
    public static String sayHurrayThreeTimes() {
        var word = "hurray!";
        var result = word + " " + word + " " + word;
        return result;
    }
    // END
}

//41
public class App {
    public static String truncate(String text, int length) {
        // BEGIN (write your solution here)
       var newtext = text.substring(0, length);
       var result = newtext + "...";
        return result;
        // END
    }
}

//42
public class App {
    // BEGIN (write your solution here)
    public static String getHiddenCard(String x, int y) {
        var end = x.substring(12);
        var stars = "*".repeat(y);
        return stars + end;
            }

    public static String getHiddenCard(String x) {
        var end = x.substring(12);
        var stars = "****";
        return stars + end;
            }

    // END
  }
  
//43  
public class App {
    // BEGIN (write your solution here)
    public static boolean isPensioner(int age) {
        return age >= 60;
    }
    // END
}

//44
import org.apache.commons.lang3.StringUtils;

public class App {
    // BEGIN (write your solution here)
    public static boolean isPalindrome(String name) {
        var normalup = name.toUpperCase();
        var reverseup = StringUtils.reverse(normalup);
        return normalup.equals(reverseup);
    }
    // END
}

//45
public class App {
    // BEGIN (write your solution here)
    public static boolean isInternationalPhone(String string) {
        var firstSymbol = string.charAt(0);
        var a = "+";
        var plus = a.charAt(0);
        return firstSymbol == plus;
    }
    
    // END
}

//46
public class App {
    // BEGIN (write your solution here)
    public static boolean isLeapYear(int year) {
        return year % 400  == 0 || year % 4 == 0 && year % 100 != 0;
    }
    // END
}

//47
import java.time.LocalDate;

public class App {
    // BEGIN (write your solution here) 

    public static boolean notToday(String date) {
    var today = LocalDate.now().toString();
    return !today.equals(date);
}
    // END
}


//48
public class App {
    // BEGIN (write your solution here)
    public static String getSentenceTone(String sentence) {
        if (sentence.equals(sentence.toUpperCase())){
            return "scream";
        }
        else {
            return "normal";
        }
    }
    // END
}

//49
public class App {
    // BEGIN (write your solution here)
    public static String normalizeUrl(String url) {
        if (url.startsWith("https://")) {
            return url;
        }
        else {
            return "https://"+url;
        }
    }
    
    // END
}

//50
public class App {
    // BEGIN (write your solution here)
    public static String whoIsThisHouseToStarks(String surname){
        if (surname.equals("Karstark") || surname.equals("Tally")) {
            return "friend";
        }
        else if (surname.equals("Lannister") || surname.equals("Frey"))  {
            return "enemy";
        }
        else  {
        return "neutral";
        }
    } 
    
    // END
}

//51

import org.apache.commons.lang3.StringUtils;

public class App {
    // BEGIN (write your solution here)
    public static String convertString(String word){
        if (word.equals("")) {
            return word;
        }
        var firstLetter = word.charAt(0);
        return Character.isUpperCase(firstLetter) ? word : StringUtils.reverse(word);
        }
    // END
}


//52
public class App {
    // BEGIN (write your solution here)
    public static String getNumberExplanation(int number) {
        switch(number) {
            case 666:
            return "devil number";
            case 42:
            return "answer for everything";
            case 7:
            return "prime number";
            default:
            return null;
        }
    }
    // END
}

//53
public class App {
    public static void printNumbers(int firstNumber) {
        // BEGIN (write your solution here)
        var i = firstNumber;

        while (1 <= i) {
            System.out.println(i);
            i = i - 1;
        }
        System.out.println("finished!");
        // END
    }
}

//54
public class App {
    public static int multiplyNumbersFromRange(int start, int finish) {
        // BEGIN (write your solution here)
        var i = start;
        var sum = 1;

        while (i<= finish){
            sum = sum * i;
            i = i+1;
        }
        return sum;
        // END
    }
}

//55
public class App {
    public static String joinNumbersFromRange(int start, int finish) {
        // BEGIN (write your solution here)
        var result = "";
        var i = start;

        while (i <= finish) {
           result = result + i;
            i = i + 1;
        }

        return result;
        // END
    }
}

//56
public class App {
    public static void printReversedNameBySymbol(String name) {
        // BEGIN (write your solution here)
        var i = name.length() - 1;
        while (i >= 0) {
        System.out.println(name.charAt(i));
        i = i - 1;
        }
        // END
    }
}

//57
public class App {
    public static int countChars(String str, char ch) {
        // BEGIN (write your solution here)
        var i = 0;
        var count = 0;
        var str2 = str.toUpperCase();

        while (i < str2.length()) {
            if (str2.charAt(i) == Character.toUpperCase(ch)) {
                count = count +1;
            }
            i = i+1;
        }

        return count;

        // END
    }
}

//58
public class App {
    public static String reverse(String str) {
        // BEGIN (write your solution here)
        var i = str.length() - 1;
        var result = "";

        while (i >= 0) {
            result = result + str.charAt(i);
            i = i-1;
        }
        return result;
        // END
    }
}

//59
public class App {
    public static String filterString(String str, char ch) {
        // BEGIN (write your solution here)
        
        var i = 0;
        var result = "";

        while (i < str.length()){
            if (str.charAt(i) == ch) {
                result = result;
                i += 1;
                            }
             if (str.charAt(i) != ch) {
                result = result + str.charAt(i);
                i += 1;
                            }
        }
         return result;
        // END
    }
}

//60
