//39
// BEGIN
public class App {
    public static void gogo() {
        System.out.println("It works!");
    }
    public static void main(String[] args) {
        App.gogo();
    }
}
// END

//40
public class App {
    // BEGIN (write your solution here)
    public static String sayHurrayThreeTimes() {
        var word = "hurray!";
        var result = word + " " + word + " " + word;
        return result;
    }
    // END
}

//41
public class App {
    public static String truncate(String text, int length) {
        // BEGIN (write your solution here)
       var newtext = text.substring(0, length);
       var result = newtext + "...";
        return result;
        // END
    }
}

//42
public class App {
    // BEGIN (write your solution here)
    public static String getHiddenCard(String x, int y) {
        var end = x.substring(12);
        var stars = "*".repeat(y);
        return stars + end;
            }

    public static String getHiddenCard(String x) {
        var end = x.substring(12);
        var stars = "****";
        return stars + end;
            }

    // END
  }
  
//43  
public class App {
    // BEGIN (write your solution here)
    public static boolean isPensioner(int age) {
        return age >= 60;
    }
    // END
}

//44
import org.apache.commons.lang3.StringUtils;

public class App {
    // BEGIN (write your solution here)
    public static boolean isPalindrome(String name) {
        var normalup = name.toUpperCase();
        var reverseup = StringUtils.reverse(normalup);
        return normalup.equals(reverseup);
    }
    // END
}

//45
public class App {
    // BEGIN (write your solution here)
    public static boolean isInternationalPhone(String string) {
        var firstSymbol = string.charAt(0);
        var a = "+";
        var plus = a.charAt(0);
        return firstSymbol == plus;
    }
    
    // END
}

//46
public class App {
    // BEGIN (write your solution here)
    public static boolean isLeapYear(int year) {
        return year % 400  == 0 || year % 4 == 0 && year % 100 != 0;
    }
    // END
}

//47
import java.time.LocalDate;

public class App {
    // BEGIN (write your solution here) 

    public static boolean notToday(String date) {
    var today = LocalDate.now().toString();
    return !today.equals(date);
}
    // END
}

